/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Custom layer definitions
#define BASE 0
#define NUMS 1
#define NAVI 2
#define ADJS 3

/ {

    // Tap Dance
    behaviors {
        // // double-tap LSHIFT to turn on CAPS WORD
        // tdcaps: td_caps_word {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "CAPDANCE";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <150>;
        //     bindings = <&kp LSHFT>, <&caps_word>;
        // };
        // double-tap ` to ESC
        td_gresc: tap_dance_gresc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp GRAVE>, <&kp ESC>;
        };

    };

    combos {
        compatible = "zmk,combos";
        // TAB+Q = ESC
        esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        // P+BACKSPACE = DEL
        pbksp_del {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp DEL>;
        };

        // QE = ALT+F4
        qe_altf4 {
            timeout-ms = <50>;
            key-positions = <1 3>;
            bindings = <&kp LA(F4)>;
        };


        // IO = (
        io_lpar {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp LPAR>;
        };
        // OP = )
        op_rpar {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp RPAR>;
        };

        // HJ = [
        jk_lbkt {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp LBKT>;
        };
        // KL = ]
        kl_rbkt {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp RBKT>;
        };

        // NM = {
        m,_lbrc {
            timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&kp LBKT>;
        };
        // ,. = }
        ,._rbrc {
            timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&kp RBKT>;
        };

    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------
            // | ` ESC   |  Q  |  W  |  E  |  R  |  T  |        |  Y  |  U  |  I  |  O  |  P  | BSPC    |
            // | NAVI TAB|  A  |  S  |  D  |  F  |  G  |        |  H  |  J  |  K  |  L  |  ;  | NAVI '  |
            // |  LCTRL  |  Z  |  X  |  C  |  V  |  B  |        |  N  |  M  |  ,  |  .  |  /  |  \      |
            //                | LALT | LGUI | NUMS SPC |        | NAVI ENT | SHFT |ADJS RALT|

            bindings = <
                &td_gresc     &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y  &kp U  &kp I      &kp O    &kp P     &kp DEL
                &lt NAVI TAB  &kp A  &kp S  &kp D  &kp F  &kp G        &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
                &kp LCTRL     &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                            &kp LALT  &kp LGUI  &mt NUMS SPACE        &lt NAVI RET  &kp LSHFT  &lt ADJS RALT
            >;
        };

        nums {
            // -----------------------------------------------------------------------------------------
            // |         |  1  |  2  |  3  |  4  |  5  |        |  6  |  7  |  8  |  9  |  0  |     |
            // |   F1    | F2  | F3  | F4  | F5  | F6  |        |     |  -_ |  =+ |  [{ |  ]} |  '" |
            // |   F7    | F8  | F9  | F10 | F11 | F12 |        |     |     |  ,< |  .> |  /? |  \| |
            //                       |     |     |     |        |     |     |     |
  
            bindings = <
                &trans  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5          &kp N6   &kp N7     &kp N8     &kp N9    &kp N0    &trans
                &kp F1  &kp F2    &kp F3  &kp F4    &kp F5    &kp F6          &kp DOT  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &trans 
                &kp F7  &kp F8    &kp F9  &kp F10   &kp F11   &kp F12         &trans   &trans     &kp COMMA  &kp DOT   &kp FSLH  &kp BSLH
                                          &trans    &trans    &trans          &trans   &kp N0     &trans
            >;
        };

        navi {
            // -----------------------------------------------------------------------------------------
            // |         |     |PG_DN| UP  |PG_UP|     |        |     |PG_DN| UP  |PG_UP|     |      |
            // |         |     | LFT | DWN | RGT |     |        |     | LFT | DWN | RGT |     |      |
            // |         |     |     |     |     |     |        |     |  PP |MUTE |VOLDN|VOLUP|      |
            //                       |     |     |     |        |     |     |     |

            bindings = <
                &trans  &trans  &kp PG_DN  &kp UP    &kp PG_UP  &trans      &trans  &kp PG_DN  &kp UP      &kp PG_UP     &trans        &trans
                &trans  &trans  &kp LEFT   &kp DOWN  &kp RIGHT  &trans      &trans  &kp LEFT   &kp DOWN    &kp RIGHT     &trans        &trans
                &trans  &trans  &trans     &trans    &trans     &trans      &trans  &kp K_PP   &kp K_MUTE  &kp K_VOL_DN  &kp K_VOL_UP  &trans
                                                &trans  &trans  &trans      &trans  &trans  &trans
            >;
        };

        adjs {
            // -----------------------------------------------------------------------------------------
            // |         |     |     |     |     |     |        | BT1 | BT2 | BT3 | BT4 | BT5 | BT_CLR |
            // |         |     |     |     |     |     |        |  PP |VOLUP|VOLDN|MUTE |     |        |      
            // |         |     |     |     |     |     |        |     |     |     |     |     |        |
            //                       |     |     |     |        |     |     |     |

            bindings = <
                &trans  &trans  &trans  &trans  &trans  &trans        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans        &trans
                &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans        &trans
                                        &trans  &trans  &trans        &trans  &trans  &trans
            >;
        };
    };
};
